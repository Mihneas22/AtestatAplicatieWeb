@page "/"
@using Application.Services
@using Domain.Models
@inject IMealService mealService;

<div class="main-container">
    <h1 class="title">Generate a meal!</h1>

    @if(mealData != null)
    {
        <div class="text-container">
            <h4>Name: @mealData.Name</h4>
            <h4>Description: @mealData.Description</h4>
            <h4>For: @mealData.Type</h4>
            <h4>Likes: @mealData.Likes</h4>
        </div>

        <div class="myRow">
            <a href="details/@mealData.Name">
                <div class="detailsButton">
                    <p class="pel">More Details</p>
                </div>
            </a>

            <div @onclick="AddLike" class="likesButton">
                <p class="pel">Like</p>
            </div>
        </div>
    }

    <div @onclick="GenerateAMeal" class="generateMealButton">
        <p class="pel">Generate Meal</p>
    </div>
</div>

@code {
    private Meal? mealData { get; set; }
    private string message { get; set; } = "";

    private async Task GenerateAMeal()
    {
        var result = await mealService.GetRandomMealService();

        if (result.Flag == true)
        {
            mealData = result.meal;
        }
        message = result.message;
    }

    private async Task AddLike()
    {
        if(mealData != null)
        {
            await mealService.AddLikeToMealService(new Application.DTOs.MealDTO.AddLikeToMeal.AddLikeToMealDTO { NameOfMeal = mealData.Name! });
            mealData.Likes += 1;
        }
    }
}
